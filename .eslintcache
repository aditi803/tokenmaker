[{"F:\\CBL\\tokenmaker\\src\\index.js":"1","F:\\CBL\\tokenmaker\\src\\App.js":"2","F:\\CBL\\tokenmaker\\src\\reportWebVitals.js":"3","F:\\CBL\\tokenmaker\\src\\components\\Layots\\ScrollButton.jsx":"4","F:\\CBL\\tokenmaker\\src\\components\\pages\\Eth_page\\EthMain.jsx":"5","F:\\CBL\\tokenmaker\\src\\components\\pages\\Main_page\\FinalMain.jsx":"6","F:\\CBL\\tokenmaker\\src\\components\\pages\\Matic_page\\MaticMain.jsx":"7","F:\\CBL\\tokenmaker\\src\\components\\pages\\Bnb_page\\BnbMain.jsx":"8","F:\\CBL\\tokenmaker\\src\\components\\pages\\Front_page\\FrontMain.jsx":"9","F:\\CBL\\tokenmaker\\src\\components\\pages\\landing_page\\Header.jsx":"10","F:\\CBL\\tokenmaker\\src\\components\\pages\\Eth_page\\EthHeader.jsx":"11","F:\\CBL\\tokenmaker\\src\\components\\pages\\landing_page\\Footer.jsx":"12","F:\\CBL\\tokenmaker\\src\\components\\pages\\landing_page\\Main.jsx":"13","F:\\CBL\\tokenmaker\\src\\contexts\\EthContext\\EtherProvider.jsx":"14","F:\\CBL\\tokenmaker\\src\\disabledUtils.js":"15","F:\\CBL\\tokenmaker\\src\\components\\Layots\\layot style\\layotStyle.js":"16","F:\\CBL\\tokenmaker\\src\\components\\Modal\\Multi-WalletModal.js":"17","F:\\CBL\\tokenmaker\\src\\components\\Layots\\TermsModal.jsx":"18","F:\\CBL\\tokenmaker\\src\\components\\pages\\Main_page\\SuccessDeploy.js":"19","F:\\CBL\\tokenmaker\\src\\components\\Modal\\ToastModal.js":"20"},{"size":552,"mtime":1666011839073,"results":"21","hashOfConfig":"22"},{"size":1732,"mtime":1666262130432,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1666011839073,"results":"24","hashOfConfig":"22"},{"size":788,"mtime":1666178091816,"results":"25","hashOfConfig":"22"},{"size":43477,"mtime":1666361381790,"results":"26","hashOfConfig":"22"},{"size":2364,"mtime":1666359855638,"results":"27","hashOfConfig":"22"},{"size":43220,"mtime":1666361590866,"results":"28","hashOfConfig":"22"},{"size":43382,"mtime":1666361230092,"results":"29","hashOfConfig":"22"},{"size":26455,"mtime":1666187228693,"results":"30","hashOfConfig":"22"},{"size":1916,"mtime":1666011839058,"results":"31","hashOfConfig":"22"},{"size":3449,"mtime":1666343293587,"results":"32","hashOfConfig":"22"},{"size":1377,"mtime":1666186327315,"results":"33","hashOfConfig":"22"},{"size":2405,"mtime":1666097463476,"results":"34","hashOfConfig":"22"},{"size":8445,"mtime":1666359855679,"results":"35","hashOfConfig":"22"},{"size":1089,"mtime":1666011839065,"results":"36","hashOfConfig":"22"},{"size":384,"mtime":1666180105699,"results":"37","hashOfConfig":"22"},{"size":1770,"mtime":1666270093766,"results":"38","hashOfConfig":"22"},{"size":5226,"mtime":1666183460850,"results":"39","hashOfConfig":"22"},{"size":6578,"mtime":1666359855638,"results":"40","hashOfConfig":"22"},{"size":548,"mtime":1666343293531,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"olh2mu",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\CBL\\tokenmaker\\src\\index.js",[],"F:\\CBL\\tokenmaker\\src\\App.js",[],"F:\\CBL\\tokenmaker\\src\\reportWebVitals.js",[],"F:\\CBL\\tokenmaker\\src\\components\\Layots\\ScrollButton.jsx",[],"F:\\CBL\\tokenmaker\\src\\components\\pages\\Eth_page\\EthMain.jsx",["86","87","88"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./eth_styles/main.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TermsModal } from \"../../Layots/TermsModal\";\r\nimport { GlobalContext } from \"../../../contexts/EthContext/EtherProvider\";\r\nimport axios from \"axios\";\r\nimport { ContractFactory, ethers } from \"ethers\";\r\n\r\n\r\n//\r\n// import Link from \"react-router-dom\";\r\n// import wallet_model from \"../../Modal/Multi-WalletModal\";\r\n// //\r\n\r\nimport {\r\n  freeDisabled,\r\n  basicDisabled,\r\n  customDisabled,\r\n} from \"../../../disabledUtils\";\r\n\r\nexport const EthMain = () => {\r\n  // const {compileContract}  = useContext(GlobalContext)\r\n  const navigate = useNavigate();\r\n\r\n  const {deployContract,showToast}  = useContext(GlobalContext)\r\n\r\n  const [ethFormData, setEthFormData] = useState({\r\n    tokenType: \"basic\",\r\n    tokenName: \"\",\r\n    tokenSymbol: \"\",\r\n    decimals: 18,\r\n    supplyType: \"fixed\",\r\n    initialSupply: 1000,\r\n    maximumSupply: 1000,\r\n    conforms: true,\r\n    verified: true,\r\n    noCopyrightLink: false,\r\n    mintable: false,\r\n    burnable: false,\r\n    pausable: false,\r\n    recoverable: false,\r\n    accessType: \"owner\",\r\n    network: \"mainnet\",\r\n    agreement: false,\r\n    commissionFee: 0.075,\r\n  });\r\n\r\n  //\r\n  const [show, setShow] = useState(false);\r\n  //\r\n  // const navigate = useNavigate();\r\n  const [err, setErr] = useState({\r\n    tokenNameErr: \"\",\r\n    tokenSymbolErr: \"\",\r\n    agreementErr: \"\",\r\n    decimalsErr: \"\",\r\n    // tokenNameErr: 'Please fill your token name',\r\n    // tokenSymbolErr: 'Please fill your token symbol',\r\n    // agreementErr: 'Please confirm that you have read and understood our terms of use'\r\n  });\r\n\r\n  // By default token type is basic selected\r\n  const [fieldsDisabled, setFieldsDisabled] = useState({\r\n    f_decimals: true,\r\n    f_supplyType: true,\r\n    f_initialSupply: false,\r\n    f_maximumSupply: true,\r\n    d_displayMaximum: \"block\",\r\n    f_conforms: true,\r\n    f_verified: true,\r\n    f_noCopyrightLink: true,\r\n    f_mintable: true,\r\n    f_burnable: true,\r\n    f_pausable: true,\r\n    f_recoverable: true,\r\n    f_accessType: true,\r\n  });\r\n\r\n  const {\r\n    tokenType,\r\n    tokenName,\r\n    tokenSymbol,\r\n    decimals,\r\n    supplyType,\r\n    initialSupply,\r\n    maximumSupply,\r\n    conforms,\r\n    verified,\r\n    noCopyrightLink,\r\n    mintable,\r\n    burnable,\r\n    pausable,\r\n    recoverable,\r\n    accessType,\r\n    network,\r\n    agreement,\r\n    commissionFee,\r\n  } = ethFormData;\r\n\r\n  const {\r\n    f_decimals,\r\n    f_supplyType,\r\n    f_initialSupply,\r\n    f_maximumSupply,\r\n    f_conforms,\r\n    f_verified,\r\n    f_noCopyrightLink,\r\n    f_mintable,\r\n    f_burnable,\r\n    f_pausable,\r\n    f_recoverable,\r\n    f_accessType,\r\n  } = fieldsDisabled;\r\n\r\n  useEffect(() => {\r\n    //\r\n    // if (recoverable === true) {\r\n    //   console.log(commissionFee, \"gg\");\r\n    //   setEthFormData((prev) => ({\r\n    //     ...prev,\r\n    //     mintable: false,\r\n    //     commissionFee: Number().toFixed(3),\r\n    //   }));\r\n    // }\r\n    // else{\r\n    //    setEthFormData((prev) => ({\r\n    //     ...prev,\r\n    //     mintable: false,\r\n    //     commissionFee: Number(commissionFee +0.075).toFixed(3),\r\n    //   }));\r\n    // }\r\n    if (pausable === true) {\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        mintable: false,\r\n        commissionFee: Number(commissionFee + 0.05).toFixed(1),\r\n      }));\r\n    }\r\n    if (burnable === true) {\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        mintable: false,\r\n        commissionFee: Number(commissionFee + 0.075).toFixed(1),\r\n      }));\r\n    }\r\n\r\n    //\r\n\r\n    if (tokenType === \"basic\") {\r\n      setFieldsDisabled(basicDisabled);\r\n\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n\r\n        noCopyrightLink: false,\r\n        // commissionFee: null,\r\n        accessType: \"owner\",\r\n        supplyType: \"fixed\",\r\n        mintable: false,\r\n        burnable: false,\r\n        pausable: false,\r\n        recoverable: false,\r\n      }));\r\n      if (network === \"rinkeby\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: null,\r\n        }));\r\n      }\r\n      if (network === \"mainnet\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.075,\r\n        }));\r\n      }\r\n      if (network === \"gorli\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: null,\r\n        }));\r\n      }\r\n    } else if (tokenType === \"free\") {\r\n      setFieldsDisabled(freeDisabled);\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        noCopyrightLink: false,\r\n        commissionFee: null,\r\n        accessType: \"owner\",\r\n        supplyType: \"fixed\",\r\n        mintable: false,\r\n        burnable: false,\r\n        pausable: false,\r\n        recoverable: false,\r\n      }));\r\n    } else if (tokenType === \"custom\") {\r\n      setFieldsDisabled(customDisabled);\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        noCopyrightLink: true,\r\n        commissionFee: 0.15,\r\n      }));\r\n      // added\r\n      if (supplyType === \"unlimited\") {\r\n        setShow(true);\r\n      }\r\n      if (supplyType === \"fixed\" || supplyType === \"capped\") {\r\n        setShow(false);\r\n      }\r\n\r\n      if (supplyType === \"capped\" || supplyType === \"unlimited\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          noCopyrightLink: true,\r\n          commissionFee: 0.225,\r\n          mintable: true,\r\n        }));\r\n        setFieldsDisabled({\r\n          ...customDisabled,\r\n          f_mintable: true,\r\n          f_burnable: false,\r\n          f_pausable: false,\r\n          f_recoverable: false,\r\n        });\r\n\r\n        if (mintable === false || burnable === false) {\r\n          setEthFormData((prev) => ({\r\n            ...prev,\r\n            // commissionFee : Number(commissionFee +0.075).toFixed(3)\r\n          }));\r\n        }\r\n      } else if (supplyType === \"fixed\") {\r\n        // if(recoverable===true){\r\n        //   setEthFormData((prev) => ({\r\n        //     ...prev,\r\n        //     mintable: false,\r\n        //     commissionFee: Number(commissionFee +0.075).toFixed(3),\r\n        //   }));\r\n        // }else{\r\n        //   setEthFormData((prev) => ({\r\n        //     ...prev,\r\n        //     mintable: false,\r\n        //     commissionFee: 0.15,\r\n        //   }));\r\n        // }\r\n      }\r\n\r\n      if (network === \"rinkeby\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: null,\r\n        }));\r\n      }\r\n      if (network === \"mainnet\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          // commissionFee: 0.15,\r\n        }));\r\n      }\r\n\r\n      if (network === \"gorli\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: null,\r\n        }));\r\n      }\r\n    }\r\n    \r\n    \r\n    \r\n  }, [tokenType, supplyType, network\r\n  ]);\r\n  useEffect(()=>{\r\n    if(supplyType===\"fixed\" || supplyType===\"capped\" ){\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n      maximumSupply:initialSupply\r\n      }));}\r\n  },[supplyType,initialSupply,maximumSupply])\r\n  useEffect(() => {\r\n    if (tokenType === \"custom\") {\r\n\r\n      // owner && fixed\r\n      if (burnable === true && pausable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.35,\r\n        }));\r\n      }\r\n      if (pausable === true && burnable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.275,\r\n        }));\r\n      }\r\n      if (pausable === true && burnable === false && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.275,\r\n        }));\r\n      }\r\n      if (\r\n        (burnable === true && pausable === false && recoverable === false) ||\r\n        (burnable === false && pausable === false && recoverable === true)\r\n      ) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.225,\r\n        }));\r\n      }\r\n      if (burnable === false && pausable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.2,\r\n        }));\r\n      }\r\n      if (pausable === false && burnable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.3,\r\n        }));\r\n      }\r\n      if (pausable === false  && recoverable === false && burnable=== false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.15,\r\n        }));\r\n      }\r\n      // Roles and fixed\r\n      if (accessType===\"roles\" && burnable === true && pausable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.4,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === true && burnable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.325,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === true && burnable === false && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.325,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && \r\n       ( (burnable === true && pausable === false && recoverable === false) ||\r\n        (burnable === false && pausable === false && recoverable === true))\r\n      ) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.275,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && burnable === false && pausable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.25,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === false && burnable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.35,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === false  && recoverable === false && burnable=== false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.2,\r\n        }));\r\n      }\r\n\r\n      // owner && (unlimited || capped)\r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\")   && pausable===false  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.225,\r\n        })); \r\n      }\r\n      \r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable=== true  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.275,\r\n        })); \r\n      }\r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===false  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.3,\r\n        })); \r\n      }\r\n      // double\r\n      \r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===true  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.35,\r\n        })); \r\n      }\r\n      \r\n\r\n\r\n      // roles && (unlimited || capped)\r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\")   && pausable===false  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.275,\r\n        })); \r\n      }\r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable=== true  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.325,\r\n        })); \r\n      }\r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===false  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.35,\r\n        })); \r\n      }\r\n      // double\r\n   \r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===true  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.4,\r\n        })); \r\n      }\r\n      \r\n      \r\n    }\r\n\r\n  }, [pausable, recoverable, burnable, tokenType, accessType]);\r\n\r\n  const ethMainFormHandler = (e) => {\r\n    let boolean = null;\r\n    if (e.target.type === \"checkbox\") {\r\n      boolean = e.target?.checked;\r\n    }\r\n    setEthFormData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: boolean ?? e.target.value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (agreement !== false) {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        agreementErr: \"\",\r\n      }));\r\n    }\r\n\r\n    if (tokenName !== \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenNameErr: \"\",\r\n      }));\r\n    }\r\n\r\n    if (tokenSymbol !== \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenSymbolErr: \"\",\r\n      }));\r\n    }\r\n    if (decimals !== null) {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        decimalsErr: \"\",\r\n      }));\r\n    }\r\n  }, [agreement, tokenName, tokenSymbol, decimals]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (ethFormData.tokenName === \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenNameErr: \"Please fill your token name\",\r\n      }));\r\n    }\r\n\r\n    if (ethFormData.tokenSymbol === \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenSymbolErr: \"Please fill your token symbol\",\r\n      }));\r\n    }\r\n\r\n    if (ethFormData.agreement === false) {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        agreementErr:\r\n          \"Please confirm that you have read and understood our terms of use\",\r\n      }));\r\n      if (ethFormData.decimals > 21 || ethFormData.decimals < 6) {\r\n        setErr((prev) => ({\r\n          ...prev,\r\n          decimalsErr: \"The number of decimals must be between 6 and 21\",\r\n        }));\r\n      }\r\n    }\r\n\r\n    if (!err.tokenNameErr && !err.tokenSymbolErr && !err.agreementErr) {\r\n      // do what u want to do with data\r\n      // console.log(\"data\");\r\n      console.log(err, \"da\");\r\n\r\n      // < Navigate to= \"/generator/final\" />\r\n      console.log(ethFormData, \">>>>>>>>>>>>>>>>\");\r\n      // navigate(\"/generator/final\")\r\n    }\r\n    if (\r\n      ethFormData.tokenName !== \"\" &&\r\n      ethFormData.tokenSymbol !== \"\" &&\r\n      ethFormData.agreement !== false \r\n    ) {\r\n      // navigate(\"/generator/final\");\r\n    }\r\n  };\r\n  //compile contract and generate bytecode and abi\r\n  const compileContract = async (FormData) => {\r\n    // Navigate \r\n    console.log(FormData.network,\"fromdatanetwork\");\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const { chainId } = await provider.getNetwork();\r\n    console.log(chainId, \"chainid\"); // 42\r\n    let selectedNetwork;\r\n    if (FormData.network === \"mainnet\") {\r\n      selectedNetwork = 1;\r\n    } else if (FormData.network === \"gorli\") {\r\n      selectedNetwork = 5;\r\n    } else if (FormData.network === \"rinkeby\") {\r\n      selectedNetwork = 4;\r\n    } \r\n\r\n    if (selectedNetwork === chainId) {\r\n        navigate(\"/generator/final\")\r\n      console.log(selectedNetwork,\"currentNetworkID\");\r\n      axios\r\n        .post(\r\n          \"https://token-maker-blocktech.herokuapp.com/api/v1/compile/contract\",\r\n          FormData\r\n        )\r\n        .then((res) => {\r\n          console.log(res, \"response\");\r\n          // contractSource = res.data.result;\r\n          // console.log(contractSource, \"contract Source api side \");\r\n          const deployedData =  deployContract(res.data.result,FormData.tokenSymbol,FormData.decimals);\r\n          console.log(deployedData,\"deployed data in compile contract side\");\r\n        });\r\n    }else{\r\n           showToast(selectedNetwork)\r\n    }\r\n  };\r\n\r\n  // {web3Loading ? (\r\n  //   <button className=\" btn-inner - text \" disabled>\r\n  //     {\" \"}\r\n  //     Loading ...{\" \"}\r\n  //   </button>\r\n  // ) : (\r\n  //   <button className=\" btn-inner - text \" onClick={connectWallet}>\r\n  //     get accounts\r\n  //   </button>\r\n  // )}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-content\">\r\n        <main>\r\n          <div className=\"hero mb-3\">\r\n            <div className=\"container\">\r\n              <h1>\r\n                <span className=\"sub-highlight\">\r\n                  Create Your Ethereum Token\r\n                </span>\r\n              </h1>\r\n              <p>\r\n                Easily deploy your Smart Contract for a Standard, Capped,\r\n                Mintable, Burnable ERC20 Token.\r\n                <br />\r\n                No login.No setup.No Coding required.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <section>\r\n            <div className=\"container\">\r\n              <div className=\"configurator-container\">\r\n                <div className=\"configurator\">\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col mt-3 mt-lg-0\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Informations\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Token type\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"tokenType\"\r\n                                onChange={ethMainFormHandler}\r\n                                value={tokenType}\r\n                              >\r\n                                <option value=\"free\">Free</option>\r\n                                <option value=\"basic\">Basic</option>\r\n                                <option value=\"custom\">Custom</option>\r\n                              </select>\r\n                              <span className=\"form-text text-muted\">\r\n                                Select the base configuration of your token\r\n                                (Free and Basic have limited configurations)\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Token Name\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"My new token\"\r\n                                name=\"tokenName\"\r\n                                value={tokenName}\r\n                                onChange={ethMainFormHandler}\r\n                              />\r\n                              <span className=\"form-text text-muted\">\r\n                                The name of your token\r\n                              </span>\r\n                              <br />\r\n                              <span className=\"text-danger\">\r\n                                {err.tokenNameErr}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Token Symbol\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"TKN\"\r\n                                maxLength=\"8\"\r\n                                name=\"tokenSymbol\"\r\n                                value={tokenSymbol}\r\n                                onChange={ethMainFormHandler}\r\n                              />\r\n                              <span className=\"form-text text-muted\">\r\n                                You token's symbol (ie ETH)\r\n                              </span>\r\n                              <br />\r\n                              <span className=\"text-danger\">\r\n                                {err.tokenSymbolErr}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Decimals<span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"18\"\r\n                                maxLength=\"2\"\r\n                                disabled={f_decimals}\r\n                                value={decimals}\r\n                                name=\"decimals\"\r\n                                onChange={ethMainFormHandler}\r\n                              />\r\n                              <span className=\"form-text text-muted\">\r\n                                The number of decimal of your token (default 18)\r\n                              </span>\r\n                              <br />\r\n                              <span className=\"text-danger\">\r\n                                {err.decimalsErr}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"card mt-3\">\r\n                            <div className=\"card-header d-flex align-items-center\">\r\n                              <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                              <h4 className=\"m-0\">\r\n                                <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                                Supply\r\n                              </h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                              <div className=\"form-group\">\r\n                                <label className=\"form-label\">\r\n                                  Supply type\r\n                                  <span className=\"val-required\">*</span>\r\n                                </label>\r\n                                <select\r\n                                  className=\"form-select\"\r\n                                  name=\"supplyType\"\r\n                                  disabled={f_supplyType}\r\n                                  onChange={ethMainFormHandler}\r\n                                  value={supplyType}\r\n                                >\r\n                                  <option value=\"fixed\">Fixed</option>\r\n                                  <option value=\"capped\">Capped</option>\r\n                                  <option value=\"unlimited\">Unlimited</option>\r\n                                </select>\r\n                                <span className=\"form-text text-muted\">\r\n                                  Fixed / Capped / Unlimited\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                <label className=\"form-label\">\r\n                                  Initial supply\r\n                                  <span className=\"val-required\">*</span>\r\n                                </label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"1000000\"\r\n                                  name=\"initialSupply\"\r\n                                  disabled={f_initialSupply}\r\n                                  value={initialSupply}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-text text-muted\">\r\n                                  The number of coins minted during the creation\r\n                                  of the contract\r\n                                </span>\r\n                              </div>\r\n                              <div\r\n                                className=\"form-group \"\r\n                                style={{ display: !show ? \"block\" : \"none\" }}\r\n                                // style={{display: {d_displayMaximum}}}\r\n                              >\r\n                                <label className=\"form-label\">\r\n                                  Maximum supply\r\n                                  <span className=\"val-required\">*</span>\r\n                                </label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"1000000\"\r\n                                  value={maximumSupply}\r\n                                  name=\"maximumSupply\"\r\n                                  disabled={f_maximumSupply}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-text text-muted\">\r\n                                  The maximum number of coins ever minted\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col mt-3 mt-lg-0\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Options\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  name=\"conforms\"\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  disabled={f_conforms}\r\n                                  onChange={ethMainFormHandler}\r\n                                  defaultChecked={conforms}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Conforms to ERC20 protocol\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Your token will const all the functionalities,\r\n                                and conforms to ERC20 protocol\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  name=\"verified\"\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  onChange={ethMainFormHandler}\r\n                                  disabled={f_verified}\r\n                                  defaultChecked={verified}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Verified on Etherscan\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                The source code of your contract is\r\n                                automatically published and verified\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"noCopyrightLink\"\r\n                                  onChange={ethMainFormHandler}\r\n                                  checked={noCopyrightLink}\r\n                                  disabled={f_noCopyrightLink}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  No copyright link\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                A link pointing to this page will be added in\r\n                                the description of your contract (Free and Basic\r\n                                contracts only)\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  checked={mintable}\r\n                                  disabled={f_mintable}\r\n                                  name=\"mintable\"\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  {\" \"}\r\n                                  Mintable{\" \"}\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow the creation of new tokens in the future\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"burnable\"\r\n                                  checked={burnable}\r\n                                  disabled={f_burnable}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label \">\r\n                                  Burnable\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow your tokens to be burned\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"pausable\"\r\n                                  checked={pausable}\r\n                                  disabled={f_pausable}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Pausable\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow your tokens to be paused\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"recoverable\"\r\n                                  checked={recoverable}\r\n                                  disabled={f_recoverable}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Recoverable\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow to recover any ERC20 tokens sent to your\r\n                                contract\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Access type\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"accessType\"\r\n                                disabled={f_accessType}\r\n                                value={accessType}\r\n                                onChange={ethMainFormHandler}\r\n                              >\r\n                                <option value=\"owner\">Owner</option>\r\n                                <option value=\"roles\">Roles</option>\r\n                              </select>\r\n                              <span className=\"form-text text-muted\">\r\n                                Who can administer your contract\r\n                              </span>\r\n                              <div className=\"form-info\">\r\n                                <div className=\"form-text text-muted\">\r\n                                  <p>\r\n                                    <span className=\"strong\">Owner:</span> Your\r\n                                    wallet address will be set as the owner of\r\n                                    your token to perform administratives tasks\r\n                                    (ie, mint new tokens).\r\n                                  </p>\r\n                                  <p>\r\n                                    <span className=\"strong\">Roles:</span> All\r\n                                    admin tasks (mint, burn, etc...) will be\r\n                                    available to different users, based on their\r\n                                    roles. By default, your wallet's address\r\n                                    will be given all the roles.\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col mt-3 mt-xl-0\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Network\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"network\"\r\n                                value={network}\r\n                                onChange={ethMainFormHandler}\r\n                              >\r\n                                <option value=\"mainnet\">Mainnet</option>\r\n                                <option value=\"gorli\">Görli</option>\r\n                                <option value=\"rinkeby\">Rinkeby</option>\r\n                              </select>\r\n                              <span className=\"form-text text-muted\">\r\n                                Select the network on wich you want to deploy\r\n                                your token\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card mt-3\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Agreement\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"agreement\"\r\n                                  value={agreement}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n\r\n                                <span className=\"form-check-label\">\r\n                                  I have read, understood and agreed to the{\" \"}\r\n                                  {/* <span className=\"text-underline\"> */}\r\n                                  {/*  modal*/}\r\n                                  <a\r\n                                    href=\"/\"\r\n                                    data-bs-toggle=\"modal\"\r\n                                    data-bs-target=\"#exampleModal\"\r\n                                  >\r\n                                    <u> term of use </u>\r\n                                  </a>\r\n                                  <TermsModal />\r\n                                  {/* modal */}\r\n                                  {/* </span> */}\r\n                                </span>\r\n                                <br />\r\n                                <span className=\"text-danger\">\r\n                                  {err.agreementErr}\r\n                                </span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card mt-3\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Transaction\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"transactionWrap\">\r\n                              <div className=\"Ttext\">\r\n                                <p>\r\n                                  Commission fee:{\" \"}\r\n                                  <i\r\n                                    className=\"fa-solid fa-circle-info tip\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    // data-bs-custom-class=\"custom-tooltip\"\r\n                                    title=\"The commison fee will be\r\n                                  transferred automatically to us during the contract creation.In case of error,this amount will not be deducted\r\n                                  from your wallet.Only the gas fees will be deducted \"\r\n                                  ></i>\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"Tbtn\">\r\n                                <span className=\"badge bg-success d-block p-2\">\r\n                                  {commissionFee\r\n                                    ? `${commissionFee} ETH`\r\n                                    : \"FREE\"}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"transactionWrap\">\r\n                              <div className=\"Ttext \">\r\n                                <p>\r\n                                  Gas fee:{\" \"}\r\n                                  <i\r\n                                    className=\"fa-solid fa-circle-info tip\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    title=\"The gas fee depend on gas limit and gas price.\r\n                                  Metamask will automatically display the best fee to use \"\r\n                                  ></i>\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"Tbtn\">\r\n                                <span className=\"badge bg-secondary d-block p-2\">\r\n                                  Variable\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn-lg btn-success1 w-100 botn-clr\"\r\n                            onClick={() => {\r\n                              compileContract(ethFormData);\r\n                            }}\r\n                          >\r\n                            Confirm\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n",["89","90"],"F:\\CBL\\tokenmaker\\src\\components\\pages\\Main_page\\FinalMain.jsx",[],"F:\\CBL\\tokenmaker\\src\\components\\pages\\Matic_page\\MaticMain.jsx",["91","92","93"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../Eth_page/eth_styles/main.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TermsModal } from \"../../Layots/TermsModal\";\r\nimport { GlobalContext } from \"../../../contexts/EthContext/EtherProvider\";\r\n\r\n//\r\n// import Link from \"react-router-dom\";\r\n// import wallet_model from \"../../Modal/Multi-WalletModal\";\r\n// //\r\n\r\nimport '../Eth_page/eth_styles/main.css'\r\nimport {\r\n  freeDisabled,\r\n  basicDisabled,\r\n  customDisabled,\r\n} from \"../../../disabledUtils\";\r\nimport axios from \"axios\";\r\nimport { ContractFactory, ethers } from \"ethers\";\r\n\r\nexport const MaticMain = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const {deployContract,showToast}  = useContext(GlobalContext)\r\n\r\n  const [ethFormData, setEthFormData] = useState({\r\n    tokenType: \"basic\",\r\n    tokenName: \"\",\r\n    tokenSymbol: \"\",\r\n    decimals: 18,\r\n    supplyType: \"fixed\",\r\n    initialSupply: 1000,\r\n    maximumSupply: 1000,\r\n    conforms: true,\r\n    verified: true,\r\n    noCopyrightLink: false,\r\n    mintable: false,\r\n    burnable: false,\r\n    pausable: false,\r\n    recoverable: false,\r\n    accessType: \"owner\",\r\n    network: \"polygonMainnet\",\r\n    agreement: false,\r\n    commissionFee: 150,\r\n  });\r\n\r\n  //\r\n  const [show, setShow] = useState(false);\r\n  //\r\n  // const navigate = useNavigate();\r\n  const [err, setErr] = useState({\r\n    tokenNameErr: \"\",\r\n    tokenSymbolErr: \"\",\r\n    agreementErr: \"\",\r\n    decimalsErr: \"\",\r\n    // tokenNameErr: 'Please fill your token name',\r\n    // tokenSymbolErr: 'Please fill your token symbol',\r\n    // agreementErr: 'Please confirm that you have read and understood our terms of use'\r\n  });\r\n\r\n  // By default token type is basic selected\r\n  const [fieldsDisabled, setFieldsDisabled] = useState({\r\n    f_decimals: true,\r\n    f_supplyType: true,\r\n    f_initialSupply: false,\r\n    f_maximumSupply: true,\r\n    d_displayMaximum: \"block\",\r\n    f_conforms: true,\r\n    f_verified: true,\r\n    f_noCopyrightLink: true,\r\n    f_mintable: true,\r\n    f_burnable: true,\r\n    f_pausable: true,\r\n    f_recoverable: true,\r\n    f_accessType: true,\r\n  });\r\n\r\n  const {\r\n    tokenType,\r\n    tokenName,\r\n    tokenSymbol,\r\n    decimals,\r\n    supplyType,\r\n    initialSupply,\r\n    maximumSupply,\r\n    conforms,\r\n    verified,\r\n    noCopyrightLink,\r\n    mintable,\r\n    burnable,\r\n    pausable,\r\n    recoverable,\r\n    accessType,\r\n    network,\r\n    agreement,\r\n    commissionFee,\r\n  } = ethFormData;\r\n\r\n  const {\r\n    f_decimals,\r\n    f_supplyType,\r\n    f_initialSupply,\r\n    f_maximumSupply,\r\n    f_conforms,\r\n    f_verified,\r\n    f_noCopyrightLink,\r\n    f_mintable,\r\n    f_burnable,\r\n    f_pausable,\r\n    f_recoverable,\r\n    f_accessType,\r\n  } = fieldsDisabled;\r\n\r\n  useEffect(()=>{\r\n    if(supplyType===\"fixed\" || supplyType===\"capped\" ){\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n      maximumSupply:initialSupply\r\n      }));}\r\n  },[supplyType,initialSupply,maximumSupply])\r\n  useEffect(() => {\r\n    //\r\n    // if (recoverable === true) {\r\n    //   console.log(commissionFee, \"gg\");\r\n    //   setEthFormData((prev) => ({\r\n    //     ...prev,\r\n    //     mintable: false,\r\n    //     commissionFee: Number().toFixed(3),\r\n    //   }));\r\n    // }\r\n    // else{\r\n    //    setEthFormData((prev) => ({\r\n    //     ...prev,\r\n    //     mintable: false,\r\n    //     commissionFee: Number(commissionFee +0.075).toFixed(3),\r\n    //   }));\r\n    // }\r\n    if (pausable === true) {\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        mintable: false,\r\n        commissionFee: Number(commissionFee + 0.05).toFixed(1),\r\n      }));\r\n    }\r\n    if (burnable === true) {\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        mintable: false,\r\n        commissionFee: Number(commissionFee + 0.075).toFixed(1),\r\n      }));\r\n    }\r\n\r\n    //\r\n\r\n    if (tokenType === \"basic\") {\r\n      setFieldsDisabled(basicDisabled);\r\n\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n\r\n        noCopyrightLink: false,\r\n        // commissionFee: null,\r\n        accessType: \"owner\",\r\n        supplyType: \"fixed\",\r\n        mintable: false,\r\n        burnable: false,\r\n        pausable: false,\r\n        recoverable: false,\r\n      }));\r\n      if (network === \"polygonMumbai\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: null,\r\n        }));\r\n      }\r\n      if (network === \"polygonMainnet\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 150,\r\n        }));\r\n      }\r\n      \r\n    } else if (tokenType === \"free\") {\r\n      setFieldsDisabled(freeDisabled);\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        noCopyrightLink: false,\r\n        commissionFee: null,\r\n        accessType: \"owner\",\r\n        supplyType: \"fixed\",\r\n        mintable: false,\r\n        burnable: false,\r\n        pausable: false,\r\n        recoverable: false,\r\n      }));\r\n    } else if (tokenType === \"custom\") {\r\n      setFieldsDisabled(customDisabled);\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        noCopyrightLink: true,\r\n        commissionFee: 0.15,\r\n      }));\r\n      // added\r\n      if (supplyType === \"unlimited\") {\r\n        setShow(true);\r\n      }\r\n      if (supplyType === \"fixed\" || supplyType === \"capped\") {\r\n        setShow(false);\r\n      }\r\n\r\n      if (supplyType === \"capped\" || supplyType === \"unlimited\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          noCopyrightLink: true,\r\n          commissionFee: 0.225,\r\n          mintable: true,\r\n        }));\r\n        setFieldsDisabled({\r\n          ...customDisabled,\r\n          f_mintable: true,\r\n          f_burnable: false,\r\n          f_pausable: false,\r\n          f_recoverable: false,\r\n        });\r\n\r\n        if (mintable === false || burnable === false) {\r\n          setEthFormData((prev) => ({\r\n            ...prev,\r\n            // commissionFee : Number(commissionFee +0.075).toFixed(3)\r\n          }));\r\n        }\r\n      } else if (supplyType === \"fixed\") {\r\n        // if(recoverable===true){\r\n        //   setEthFormData((prev) => ({\r\n        //     ...prev,\r\n        //     mintable: false,\r\n        //     commissionFee: Number(commissionFee +0.075).toFixed(3),\r\n        //   }));\r\n        // }else{\r\n        //   setEthFormData((prev) => ({\r\n        //     ...prev,\r\n        //     mintable: false,\r\n        //     commissionFee: 0.15,\r\n        //   }));\r\n        // }\r\n      }\r\n\r\n      if (network === \"polygonMumbai\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: null,\r\n        }));\r\n      }\r\n      if (network === \"polygonMainnet\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          // commissionFee: 0.15,\r\n        }));\r\n      }\r\n    }\r\n  }, [tokenType, supplyType, network]);\r\n\r\n  useEffect(() => {\r\n    if (tokenType === \"custom\") {\r\n\r\n      // owner && fixed\r\n      if (burnable === true && pausable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 700,\r\n        }));\r\n      }\r\n      if (pausable === true && burnable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 550,\r\n        }));\r\n      }\r\n      if (pausable === true && burnable === false && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 550,\r\n        }));\r\n      }\r\n      if (\r\n        (burnable === true && pausable === false && recoverable === false) ||\r\n        (burnable === false && pausable === false && recoverable === true)\r\n      ) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 450,\r\n        }));\r\n      }\r\n      if (burnable === false && pausable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 400,\r\n        }));\r\n      }\r\n      if (pausable === false && burnable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee:600,\r\n        }));\r\n      }\r\n      if (pausable === false  && recoverable === false && burnable=== false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 300,\r\n        }));\r\n      }\r\n      // Roles and fixed\r\n      if (accessType===\"roles\" && burnable === true && pausable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 800,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === true && burnable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 650,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === true && burnable === false && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 650,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && \r\n       ( (burnable === true && pausable === false && recoverable === false) ||\r\n        (burnable === false && pausable === false && recoverable === true))\r\n      ) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee:550,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && burnable === false && pausable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 500,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === false && burnable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 700,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === false  && recoverable === false && burnable=== false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 400,\r\n        }));\r\n      }\r\n\r\n      // owner && (unlimited || capped)\r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\")   && pausable===false  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 450,\r\n        })); \r\n      }\r\n      \r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable=== true  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 550,\r\n        })); \r\n      }\r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===false  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 600,\r\n        })); \r\n      }\r\n      // double\r\n      \r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===true  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 700,\r\n        })); \r\n      }\r\n      \r\n\r\n\r\n      // roles && (unlimited || capped)\r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\")   && pausable===false  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 550,\r\n        })); \r\n      }\r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable=== true  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 650,\r\n        })); \r\n      }\r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===false  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 700,\r\n        })); \r\n      }\r\n      // double\r\n   \r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===true  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 800,\r\n        })); \r\n      }\r\n      \r\n      \r\n    }\r\n\r\n  }, [pausable, recoverable, burnable, tokenType, accessType]);\r\n\r\n  const ethMainFormHandler = (e) => {\r\n    let boolean = null;\r\n    if (e.target.type === \"checkbox\") {\r\n      boolean = e.target?.checked;\r\n    }\r\n    setEthFormData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: boolean ?? e.target.value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (agreement !== false) {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        agreementErr: \"\",\r\n      }));\r\n    }\r\n\r\n    if (tokenName !== \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenNameErr: \"\",\r\n      }));\r\n    }\r\n\r\n    if (tokenSymbol !== \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenSymbolErr: \"\",\r\n      }));\r\n    }\r\n    if (decimals !== null) {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        decimalsErr: \"\",\r\n      }));\r\n    }\r\n  }, [agreement, tokenName, tokenSymbol, decimals]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (ethFormData.tokenName === \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenNameErr: \"Please fill your token name\",\r\n      }));\r\n    }\r\n\r\n    if (ethFormData.tokenSymbol === \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenSymbolErr: \"Please fill your token symbol\",\r\n      }));\r\n    }\r\n\r\n    if (ethFormData.agreement === false) {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        agreementErr:\r\n          \"Please confirm that you have read and understood our terms of use\",\r\n      }));\r\n      if (ethFormData.decimals > 21 || ethFormData.decimals < 6) {\r\n        setErr((prev) => ({\r\n          ...prev,\r\n          decimalsErr: \"The number of decimals must be between 6 and 21\",\r\n        }));\r\n      }\r\n    }\r\n\r\n    if (!err.tokenNameErr && !err.tokenSymbolErr && !err.agreementErr) {\r\n      // do what u want to do with data\r\n      // console.log(\"data\");\r\n      console.log(err, \"da\");\r\n\r\n      // < Navigate to= \"/generator/final\" />\r\n      console.log(ethFormData, \">>>>>>>>>>>>>>>>\");\r\n      // navigate(\"/generator/final\")\r\n    }\r\n    if (\r\n      ethFormData.tokenName !== \"\" &&\r\n      ethFormData.tokenSymbol !== \"\" &&\r\n      ethFormData.agreement !== false \r\n    ) {\r\n      // navigate(\"/generator/final\");\r\n    }\r\n  };\r\n  //compile contract and generate bytecode and abi\r\n  const compileContract = async (FormData) => {\r\n    // Navigate \r\n    console.log(FormData.network,\"fromdatanetwork\");\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const { chainId } = await provider.getNetwork();\r\n    console.log(chainId, \"chainid\"); // 42\r\n    let selectedNetwork;\r\n    if (FormData.network === \"polygonMainnet\") {\r\n      selectedNetwork = 137;\r\n    } else if (FormData.network === \"polygonMumbai\") {\r\n      selectedNetwork = 80001;\r\n    } \r\n\r\n    console.log(selectedNetwork,\"selct net eth main if side\");\r\n    if (selectedNetwork === chainId) {\r\n        navigate(\"/generator/final\")\r\n      console.log(selectedNetwork,\"currentNetworkID\");\r\n      axios\r\n        .post(\r\n          \"https://token-maker-blocktech.herokuapp.com/api/v1/compile/contract\",\r\n          FormData\r\n        )\r\n        .then((res) => {\r\n          console.log(res, \"response\");\r\n          // contractSource = res.data.result;\r\n          // console.log(contractSource, \"contract Source api side \");\r\n          const deployedData =  deployContract(res.data.result,FormData.tokenSymbol,FormData.decimals);\r\n          console.log(deployedData,\"deployed data in compile contract side\");\r\n          // return deployedData\r\n        });\r\n    }else{\r\n      console.log(selectedNetwork,\"selected netwrk\");\r\n           showToast(selectedNetwork)\r\n    }\r\n  };\r\n\r\n  // {web3Loading ? (\r\n  //   <button className=\" btn-inner - text \" disabled>\r\n  //     {\" \"}\r\n  //     Loading ...{\" \"}\r\n  //   </button>\r\n  // ) : (\r\n  //   <button className=\" btn-inner - text \" onClick={connectWallet}>\r\n  //     get accounts\r\n  //   </button>\r\n  // )}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-content\">\r\n        <main>\r\n          <div className=\"hero mb-3\">\r\n            <div className=\"container\">\r\n              <h1>\r\n                <span className=\"sub-highlight\">\r\n                  Create Your Polygon Token\r\n                </span>\r\n              </h1>\r\n              <p>\r\n                Easily deploy your Smart Contract for a Standard, Capped,\r\n                Mintable, Burnable ERC20 Token.\r\n                <br />\r\n                No login.No setup.No Coding required.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <section>\r\n            <div className=\"container\">\r\n              <div className=\"configurator-container\">\r\n                <div className=\"configurator\">\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col mt-3 mt-lg-0\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Informations\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Token type\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"tokenType\"\r\n                                onChange={ethMainFormHandler}\r\n                                value={tokenType}\r\n                              >\r\n                                <option value=\"free\">Free</option>\r\n                                <option value=\"basic\">Basic</option>\r\n                                <option value=\"custom\">Custom</option>\r\n                              </select>\r\n                              <span className=\"form-text text-muted\">\r\n                                Select the base configuration of your token\r\n                                (Free and Basic have limited configurations)\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Token Name\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"My new token\"\r\n                                name=\"tokenName\"\r\n                                value={tokenName}\r\n                                onChange={ethMainFormHandler}\r\n                              />\r\n                              <span className=\"form-text text-muted\">\r\n                                The name of your token\r\n                              </span>\r\n                              <br />\r\n                              <span className=\"text-danger\">\r\n                                {err.tokenNameErr}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Token Symbol\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"TKN\"\r\n                                maxLength=\"8\"\r\n                                name=\"tokenSymbol\"\r\n                                value={tokenSymbol}\r\n                                onChange={ethMainFormHandler}\r\n                              />\r\n                              <span className=\"form-text text-muted\">\r\n                                You token's symbol (ie MATIC)\r\n                              </span>\r\n                              <br />\r\n                              <span className=\"text-danger\">\r\n                                {err.tokenSymbolErr}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Decimals<span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"18\"\r\n                                maxLength=\"2\"\r\n                                disabled={f_decimals}\r\n                                value={decimals}\r\n                                name=\"decimals\"\r\n                                onChange={ethMainFormHandler}\r\n                              />\r\n                              <span className=\"form-text text-muted\">\r\n                                The number of decimal of your token (default 18)\r\n                              </span>\r\n                              <br />\r\n                              <span className=\"text-danger\">\r\n                                {err.decimalsErr}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"card mt-3\">\r\n                            <div className=\"card-header d-flex align-items-center\">\r\n                              <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                              <h4 className=\"m-0\">\r\n                                <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                                Supply\r\n                              </h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                              <div className=\"form-group\">\r\n                                <label className=\"form-label\">\r\n                                  Supply type\r\n                                  <span className=\"val-required\">*</span>\r\n                                </label>\r\n                                <select\r\n                                  className=\"form-select\"\r\n                                  name=\"supplyType\"\r\n                                  disabled={f_supplyType}\r\n                                  onChange={ethMainFormHandler}\r\n                                  value={supplyType}\r\n                                >\r\n                                  <option value=\"fixed\">Fixed</option>\r\n                                  <option value=\"capped\">Capped</option>\r\n                                  <option value=\"unlimited\">Unlimited</option>\r\n                                </select>\r\n                                <span className=\"form-text text-muted\">\r\n                                  Fixed / Capped / Unlimited\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                <label className=\"form-label\">\r\n                                  Initial supply\r\n                                  <span className=\"val-required\">*</span>\r\n                                </label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"1000000\"\r\n                                  name=\"initialSupply\"\r\n                                  disabled={f_initialSupply}\r\n                                  value={initialSupply}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-text text-muted\">\r\n                                  The number of coins minted during the creation\r\n                                  of the contract\r\n                                </span>\r\n                              </div>\r\n                              <div\r\n                                className=\"form-group \"\r\n                                style={{ display: !show ? \"block\" : \"none\" }}\r\n                                // style={{display: {d_displayMaximum}}}\r\n                              >\r\n                                <label className=\"form-label\">\r\n                                  Maximum supply\r\n                                  <span className=\"val-required\">*</span>\r\n                                </label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"1000000\"\r\n                                  value={maximumSupply}\r\n                                  name=\"maximumSupply\"\r\n                                  disabled={f_maximumSupply}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-text text-muted\">\r\n                                  The maximum number of coins ever minted\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col mt-3 mt-lg-0\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Options\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  name=\"conforms\"\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  disabled={f_conforms}\r\n                                  onChange={ethMainFormHandler}\r\n                                  defaultChecked={conforms}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Conforms to ERC20 protocol\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Your token will const all the functionalities,\r\n                                and conforms to ERC20 protocol\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  name=\"verified\"\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  onChange={ethMainFormHandler}\r\n                                  disabled={f_verified}\r\n                                  defaultChecked={verified}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Verified on Polygonscan\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                The source code of your contract is\r\n                                automatically published and verified\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"noCopyrightLink\"\r\n                                  onChange={ethMainFormHandler}\r\n                                  checked={noCopyrightLink}\r\n                                  disabled={f_noCopyrightLink}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  No copyright link\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                A link pointing to this page will be added in\r\n                                the description of your contract (Free and Basic\r\n                                contracts only)\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  checked={mintable}\r\n                                  disabled={f_mintable}\r\n                                  name=\"mintable\"\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  {\" \"}\r\n                                  Mintable{\" \"}\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow the creation of new tokens in the future\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"burnable\"\r\n                                  checked={burnable}\r\n                                  disabled={f_burnable}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label \">\r\n                                  Burnable\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow your tokens to be burned\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"pausable\"\r\n                                  checked={pausable}\r\n                                  disabled={f_pausable}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Pausable\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow your tokens to be paused\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"recoverable\"\r\n                                  checked={recoverable}\r\n                                  disabled={f_recoverable}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Recoverable\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow to recover any ERC20 tokens sent to your\r\n                                contract\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Access type\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"accessType\"\r\n                                disabled={f_accessType}\r\n                                value={accessType}\r\n                                onChange={ethMainFormHandler}\r\n                              >\r\n                                <option value=\"owner\">Owner</option>\r\n                                <option value=\"roles\">Roles</option>\r\n                              </select>\r\n                              <span className=\"form-text text-muted\">\r\n                                Who can administer your contract\r\n                              </span>\r\n                              <div className=\"form-info\">\r\n                                <div className=\"form-text text-muted\">\r\n                                  <p>\r\n                                    <span className=\"strong\">Owner:</span> Your\r\n                                    wallet address will be set as the owner of\r\n                                    your token to perform administratives tasks\r\n                                    (ie, mint new tokens).\r\n                                  </p>\r\n                                  <p>\r\n                                    <span className=\"strong\">Roles:</span> All\r\n                                    admin tasks (mint, burn, etc...) will be\r\n                                    available to different users, based on their\r\n                                    roles. By default, your wallet's address\r\n                                    will be given all the roles.\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col mt-3 mt-xl-0\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Network\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"network\"\r\n                                value={network}\r\n                                onChange={ethMainFormHandler}\r\n                              >\r\n                                <option value=\"polygonMainnet\">Polygon Mainnet</option>\r\n                                <option value=\"polygonMumbai\">Polygon Mumbai</option>\r\n                              </select>\r\n                              <span className=\"form-text text-muted\">\r\n                                Select the network on wich you want to deploy\r\n                                your token\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card mt-3\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Agreement\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"agreement\"\r\n                                  value={agreement}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n\r\n                                <span className=\"form-check-label\">\r\n                                  I have read, understood and agreed to the{\" \"}\r\n                                  {/* <span className=\"text-underline\"> */}\r\n                                  {/*  modal*/}\r\n                                  <a\r\n                                    href=\"/\"\r\n                                    data-bs-toggle=\"modal\"\r\n                                    data-bs-target=\"#exampleModal\"\r\n                                  >\r\n                                    <u> term of use </u>\r\n                                  </a>\r\n                                  <TermsModal />\r\n                                  {/* modal */}\r\n                                  {/* </span> */}\r\n                                </span>\r\n                                <br />\r\n                                <span className=\"text-danger\">\r\n                                  {err.agreementErr}\r\n                                </span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card mt-3\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Transaction\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"transactionWrap\">\r\n                              <div className=\"Ttext\">\r\n                                <p>\r\n                                  Commission fee:{\" \"}\r\n                                  <i\r\n                                    className=\"fa-solid fa-circle-info tip\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    // data-bs-custom-class=\"custom-tooltip\"\r\n                                    title=\"The commison fee will be\r\n                                  transferred automatically to us during the contract creation.In case of error,this amount will not be deducted\r\n                                  from your wallet.Only the gas fees will be deducted \"\r\n                                  ></i>\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"Tbtn\">\r\n                                <span className=\"badge bg-success d-block p-2\">\r\n                                  {commissionFee\r\n                                    ? `${commissionFee} MATIC`\r\n                                    : \"FREE\"}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"transactionWrap\">\r\n                              <div className=\"Ttext \">\r\n                                <p>\r\n                                  Gas fee:{\" \"}\r\n                                  <i\r\n                                    className=\"fa-solid fa-circle-info tip\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    title=\"The gas fee depend on gas limit and gas price.\r\n                                  Metamask will automatically display the best fee to use \"\r\n                                  ></i>\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"Tbtn\">\r\n                                <span className=\"badge bg-secondary d-block p-2\">\r\n                                  Variable\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn-lg btn-success1 w-100 botn-clr\"\r\n                            onClick={()=>{\r\n                              compileContract(ethFormData)\r\n                            }}\r\n                          >\r\n                            Confirm\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","F:\\CBL\\tokenmaker\\src\\components\\pages\\Bnb_page\\BnbMain.jsx",["94","95","96"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../Eth_page/eth_styles/main.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TermsModal } from \"../../Layots/TermsModal\";\r\nimport { GlobalContext } from \"../../../contexts/EthContext/EtherProvider\";\r\nimport axios from \"axios\";\r\nimport { ContractFactory, ethers } from \"ethers\";\r\n//\r\n// import Link from \"react-router-dom\";\r\n// import wallet_model from \"../../Modal/Multi-WalletModal\";\r\n// //\r\n\r\nimport {\r\n  freeDisabled,\r\n  basicDisabled,\r\n  customDisabled,\r\n} from \"../../../disabledUtils\";\r\n\r\nexport const BnbMain = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // const {compileContract,navigateTo}  = useContext(GlobalContext)\r\n  const {deployContract,showToast}  = useContext(GlobalContext)\r\n\r\n  const [ethFormData, setEthFormData] = useState({\r\n    tokenType: \"basic\",\r\n    tokenName: \"\",\r\n    tokenSymbol: \"\",\r\n    decimals: 18,\r\n    supplyType: \"fixed\",\r\n    initialSupply: 1000,\r\n    maximumSupply: 1000,\r\n    conforms: true,\r\n    verified: true,\r\n    noCopyrightLink: false,\r\n    mintable: false,\r\n    burnable: false,\r\n    pausable: false,\r\n    recoverable: false,\r\n    accessType: \"owner\",\r\n    network: \"binanceSmartChain\",\r\n    agreement: false,\r\n    commissionFee: 0.5,\r\n  });\r\n\r\n  //\r\n  const [show, setShow] = useState(false);\r\n  //\r\n  // const navigate = useNavigate();\r\n  const [err, setErr] = useState({\r\n    tokenNameErr: \"\",\r\n    tokenSymbolErr: \"\",\r\n    agreementErr: \"\",\r\n    decimalsErr: \"\",\r\n    // tokenNameErr: 'Please fill your token name',\r\n    // tokenSymbolErr: 'Please fill your token symbol',\r\n    // agreementErr: 'Please confirm that you have read and understood our terms of use'\r\n  });\r\n\r\n  // By default token type is basic selected\r\n  const [fieldsDisabled, setFieldsDisabled] = useState({\r\n    f_decimals: true,\r\n    f_supplyType: true,\r\n    f_initialSupply: false,\r\n    f_maximumSupply: true,\r\n    d_displayMaximum: \"block\",\r\n    f_conforms: true,\r\n    f_verified: true,\r\n    f_noCopyrightLink: true,\r\n    f_mintable: true,\r\n    f_burnable: true,\r\n    f_pausable: true,\r\n    f_recoverable: true,\r\n    f_accessType: true,\r\n  });\r\n\r\n  const {\r\n    tokenType,\r\n    tokenName,\r\n    tokenSymbol,\r\n    decimals,\r\n    supplyType,\r\n    initialSupply,\r\n    maximumSupply,\r\n    conforms,\r\n    verified,\r\n    noCopyrightLink,\r\n    mintable,\r\n    burnable,\r\n    pausable,\r\n    recoverable,\r\n    accessType,\r\n    network,\r\n    agreement,\r\n    commissionFee,\r\n  } = ethFormData;\r\n\r\n  const {\r\n    f_decimals,\r\n    f_supplyType,\r\n    f_initialSupply,\r\n    f_maximumSupply,\r\n    f_conforms,\r\n    f_verified,\r\n    f_noCopyrightLink,\r\n    f_mintable,\r\n    f_burnable,\r\n    f_pausable,\r\n    f_recoverable,\r\n    f_accessType,\r\n  } = fieldsDisabled;\r\n\r\n  useEffect(() => {\r\n    //\r\n    // if (recoverable === true) {\r\n    //   console.log(commissionFee, \"gg\");\r\n    //   setEthFormData((prev) => ({\r\n    //     ...prev,\r\n    //     mintable: false,\r\n    //     commissionFee: Number().toFixed(3),\r\n    //   }));\r\n    // }\r\n    // else{\r\n    //    setEthFormData((prev) => ({\r\n    //     ...prev,\r\n    //     mintable: false,\r\n    //     commissionFee: Number(commissionFee +0.075).toFixed(3),\r\n    //   }));\r\n    // }\r\n    if (pausable === true) {\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        mintable: false,\r\n        commissionFee: Number(commissionFee + 0.05).toFixed(1),\r\n      }));\r\n    }\r\n    if (burnable === true) {\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        mintable: false,\r\n        commissionFee: Number(commissionFee + 0.075).toFixed(1),\r\n      }));\r\n    }\r\n\r\n    //\r\n\r\n    if (tokenType === \"basic\") {\r\n      setFieldsDisabled(basicDisabled);\r\n\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n\r\n        noCopyrightLink: false,\r\n        // commissionFee: null,\r\n        accessType: \"owner\",\r\n        supplyType: \"fixed\",\r\n        mintable: false,\r\n        burnable: false,\r\n        pausable: false,\r\n        recoverable: false,\r\n      }));\r\n      if (network === \"binanceSmartChainTestnet\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: null,\r\n        }));\r\n      }\r\n      if (network === \"binanceSmartChain\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 0.5,\r\n        }));\r\n      }\r\n    \r\n    } else if (tokenType === \"free\") {\r\n      setFieldsDisabled(freeDisabled);\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        noCopyrightLink: false,\r\n        commissionFee: null,\r\n        accessType: \"owner\",\r\n        supplyType: \"fixed\",\r\n        mintable: false,\r\n        burnable: false,\r\n        pausable: false,\r\n        recoverable: false,\r\n      }));\r\n    } else if (tokenType === \"custom\") {\r\n      setFieldsDisabled(customDisabled);\r\n      setEthFormData((prev) => ({\r\n        ...prev,\r\n        noCopyrightLink: true,\r\n        commissionFee: 1,\r\n      }));\r\n      // added\r\n      if (supplyType === \"unlimited\") {\r\n        setShow(true);\r\n      }\r\n      if (supplyType === \"fixed\" || supplyType === \"capped\") {\r\n        setShow(false);\r\n      }\r\n\r\n      if (supplyType === \"capped\" || supplyType === \"unlimited\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          noCopyrightLink: true,\r\n          commissionFee: 0.225,\r\n          mintable: true,\r\n        }));\r\n        setFieldsDisabled({\r\n          ...customDisabled,\r\n          f_mintable: true,\r\n          f_burnable: false,\r\n          f_pausable: false,\r\n          f_recoverable: false,\r\n        });\r\n\r\n        if (mintable === false || burnable === false) {\r\n          setEthFormData((prev) => ({\r\n            ...prev,\r\n            // commissionFee : Number(commissionFee +0.075).toFixed(3)\r\n          }));\r\n        }\r\n      } else if (supplyType === \"fixed\") {\r\n        // if(recoverable===true){\r\n        //   setEthFormData((prev) => ({\r\n        //     ...prev,\r\n        //     mintable: false,\r\n        //     commissionFee: Number(commissionFee +0.075).toFixed(3),\r\n        //   }));\r\n        // }else{\r\n        //   setEthFormData((prev) => ({\r\n        //     ...prev,\r\n        //     mintable: false,\r\n        //     commissionFee: 0.15,\r\n        //   }));\r\n        // }\r\n      }\r\n\r\n      if (network === \"binanceSmartChainTestnet\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: null,\r\n        }));\r\n      }\r\n      if (network === \"binanceSmartChain\") {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          // commissionFee: 0.15,\r\n        }));\r\n      }\r\n      if(supplyType===\"fixed\" || supplyType===\"capped\" ){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n        maximumSupply:initialSupply\r\n        }));\r\n      \r\n      }\r\n      \r\n\r\n\r\n    }\r\n  }, [tokenType, supplyType, network]);\r\n\r\n\r\nuseEffect(()=>{\r\n  if(supplyType===\"fixed\" || supplyType===\"capped\" ){\r\n    setEthFormData((prev) => ({\r\n      ...prev,\r\n    maximumSupply:initialSupply\r\n    }));}\r\n},[supplyType,initialSupply,maximumSupply])\r\n\r\n\r\n  useEffect(() => {\r\n    if (tokenType === \"custom\") {\r\n\r\n      // owner && fixed\r\n      if (burnable === true && pausable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2.3,\r\n        }));\r\n      }\r\n      if (pausable === true && burnable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.8,\r\n        }));\r\n      }\r\n      if (pausable === true && burnable === false && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.8,\r\n        }));\r\n      }\r\n      if (\r\n        (burnable === true && pausable === false && recoverable === false) ||\r\n        (burnable === false && pausable === false && recoverable === true)\r\n      ) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.5,\r\n        }));\r\n      }\r\n      if (burnable === false && pausable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.3,\r\n        }));\r\n      }\r\n      if (pausable === false && burnable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2,\r\n        }));\r\n      }\r\n      if (pausable === false  && recoverable === false && burnable=== false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1,\r\n        }));\r\n      }\r\n      // Roles and fixed\r\n      if (accessType===\"roles\" && burnable === true && pausable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2.6,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === true && burnable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2.1,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === true && burnable === false && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2.1,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && \r\n       ( (burnable === true && pausable === false && recoverable === false) ||\r\n        (burnable === false && pausable === false && recoverable === true))\r\n      ) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.8,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && burnable === false && pausable === true && recoverable === false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.6,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === false && burnable === true && recoverable === true) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2.3,\r\n        }));\r\n      }\r\n      if (accessType===\"roles\" && pausable === false  && recoverable === false && burnable=== false) {\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.3,\r\n        }));\r\n      }\r\n\r\n      // owner && (unlimited || capped)\r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\")   && pausable===false  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.5,\r\n        })); \r\n      }\r\n      \r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable=== true  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.8,\r\n        })); \r\n      }\r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===false  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2,\r\n        })); \r\n      }\r\n      // double\r\n      \r\n      if(accessType===\"owner\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===true  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2.3,\r\n        })); \r\n      }\r\n      \r\n\r\n\r\n      // roles && (unlimited || capped)\r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\")   && pausable===false  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 1.8,\r\n        })); \r\n      }\r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable=== true  && recoverable=== false){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2.1,\r\n        })); \r\n      }\r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===false  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2.3,\r\n        })); \r\n      }\r\n      // double\r\n   \r\n      if(accessType===\"roles\" && (supplyType===\"capped\" || supplyType=== \"unlimited\") && pausable===true  &&  recoverable=== true){\r\n        setEthFormData((prev) => ({\r\n          ...prev,\r\n          commissionFee: 2.6,\r\n        })); \r\n      }\r\n      \r\n      \r\n    }\r\n\r\n  }, [pausable, recoverable, burnable, tokenType, accessType]);\r\n\r\n  const ethMainFormHandler = (e) => {\r\n    let boolean = null;\r\n    if (e.target.type === \"checkbox\") {\r\n      boolean = e.target?.checked;\r\n    }\r\n    setEthFormData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: boolean ?? e.target.value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (agreement !== false) {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        agreementErr: \"\",\r\n      }));\r\n    }\r\n\r\n    if (tokenName !== \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenNameErr: \"\",\r\n      }));\r\n    }\r\n\r\n    if (tokenSymbol !== \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenSymbolErr: \"\",\r\n      }));\r\n    }\r\n    if (decimals !== null) {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        decimalsErr: \"\",\r\n      }));\r\n    }\r\n  }, [agreement, tokenName, tokenSymbol, decimals]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (ethFormData.tokenName === \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenNameErr: \"Please fill your token name\",\r\n      }));\r\n    }\r\n\r\n    if (ethFormData.tokenSymbol === \"\") {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        tokenSymbolErr: \"Please fill your token symbol\",\r\n      }));\r\n    }\r\n\r\n    if (ethFormData.agreement === false) {\r\n      setErr((prev) => ({\r\n        ...prev,\r\n        agreementErr:\r\n          \"Please confirm that you have read and understood our terms of use\",\r\n      }));\r\n      if (ethFormData.decimals > 21 || ethFormData.decimals < 6) {\r\n        setErr((prev) => ({\r\n          ...prev,\r\n          decimalsErr: \"The number of decimals must be between 6 and 21\",\r\n        }));\r\n      }\r\n    }\r\n\r\n    if (!err.tokenNameErr && !err.tokenSymbolErr && !err.agreementErr) {\r\n      // do what u want to do with data\r\n      // console.log(\"data\");\r\n      console.log(err, \"da\");\r\n\r\n      // < Navigate to= \"/generator/final\" />\r\n      console.log(ethFormData, \">>>>>>>>>>>>>>>>\");\r\n      // navigate(\"/generator/final\")\r\n    }\r\n    if (\r\n      ethFormData.tokenName !== \"\" &&\r\n      ethFormData.tokenSymbol !== \"\" &&\r\n      ethFormData.agreement !== false \r\n    ) {\r\n      // navigate(\"/generator/final\");\r\n    }\r\n  };\r\n\r\n  // {web3Loading ? (\r\n  //   <button className=\" btn-inner - text \" disabled>\r\n  //     {\" \"}\r\n  //     Loading ...{\" \"}\r\n  //   </button>\r\n  // ) : (\r\n  //   <button className=\" btn-inner - text \" onClick={connectWallet}>\r\n  //     get accounts\r\n  //   </button>\r\n  // )}\r\n  //compile contract and generate bytecode and abi\r\n  const compileContract = async (FormData) => {\r\n    // Navigate \r\n    console.log(FormData.network,\"fromdatanetwork\");\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const { chainId } = await provider.getNetwork();\r\n    console.log(chainId, \"chainid\"); // 42\r\n    let selectedNetwork;\r\n    if (FormData.network === \"binanceSmartChain\") {\r\n      selectedNetwork = 56;\r\n    } else if (FormData.network === \"binanceSmartChainTestnet\") {\r\n      selectedNetwork = 97;\r\n    } \r\n\r\n    if (selectedNetwork === chainId) {\r\n        navigate(\"/generator/final\")\r\n      console.log(selectedNetwork,\"currentNetworkID\");\r\n      axios\r\n        .post(\r\n          \"https://token-maker-blocktech.herokuapp.com/api/v1/compile/contract\",\r\n          FormData\r\n        )\r\n        .then((res) => {\r\n          console.log(res, \"response\");\r\n          // contractSource = res.data.result;\r\n          // console.log(contractSource, \"contract Source api side \");\r\n          const deployedData =  deployContract(res.data.result,FormData.tokenSymbol,FormData.decimals);\r\n          console.log(deployedData,\"deployed data in compile contract side\");\r\n        });\r\n    }else{\r\n           showToast(selectedNetwork)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-content\">\r\n        <main>\r\n          <div className=\"hero mb-3\">\r\n            <div className=\"container\">\r\n              <h1>\r\n                <span className=\"sub-highlight\">\r\n                  Create Your Binance Smart Chain Token\r\n                </span>\r\n              </h1>\r\n              <p>\r\n                Easily deploy your Smart Contract for a Standard, Capped,\r\n                Mintable, Burnable BEP20 Token.\r\n                <br />\r\n                No login.No setup.No Coding required.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <section>\r\n            <div className=\"container\">\r\n              <div className=\"configurator-container\">\r\n                <div className=\"configurator\">\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col mt-3 mt-lg-0\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Informations\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Token type\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"tokenType\"\r\n                                onChange={ethMainFormHandler}\r\n                                value={tokenType}\r\n                              >\r\n                                <option value=\"free\">Free</option>\r\n                                <option value=\"basic\">Basic</option>\r\n                                <option value=\"custom\">Custom</option>\r\n                              </select>\r\n                              <span className=\"form-text text-muted\">\r\n                                Select the base configuration of your token\r\n                                (Free and Basic have limited configurations)\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Token Name\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"My new token\"\r\n                                name=\"tokenName\"\r\n                                value={tokenName}\r\n                                onChange={ethMainFormHandler}\r\n                              />\r\n                              <span className=\"form-text text-muted\">\r\n                                The name of your token\r\n                              </span>\r\n                              <br />\r\n                              <span className=\"text-danger\">\r\n                                {err.tokenNameErr}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Token Symbol\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"TKN\"\r\n                                maxLength=\"8\"\r\n                                name=\"tokenSymbol\"\r\n                                value={tokenSymbol}\r\n                                onChange={ethMainFormHandler}\r\n                              />\r\n                              <span className=\"form-text text-muted\">\r\n                                You token's symbol (ie BNB)\r\n                              </span>\r\n                              <br />\r\n                              <span className=\"text-danger\">\r\n                                {err.tokenSymbolErr}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Decimals<span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"18\"\r\n                                maxLength=\"2\"\r\n                                disabled={f_decimals}\r\n                                value={decimals}\r\n                                name=\"decimals\"\r\n                                onChange={ethMainFormHandler}\r\n                              />\r\n                              <span className=\"form-text text-muted\">\r\n                                The number of decimal of your token (default 18)\r\n                              </span>\r\n                              <br />\r\n                              <span className=\"text-danger\">\r\n                                {err.decimalsErr}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"card mt-3\">\r\n                            <div className=\"card-header d-flex align-items-center\">\r\n                              <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                              <h4 className=\"m-0\">\r\n                                <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                                Supply\r\n                              </h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                              <div className=\"form-group\">\r\n                                <label className=\"form-label\">\r\n                                  Supply type\r\n                                  <span className=\"val-required\">*</span>\r\n                                </label>\r\n                                <select\r\n                                  className=\"form-select\"\r\n                                  name=\"supplyType\"\r\n                                  disabled={f_supplyType}\r\n                                  onChange={ethMainFormHandler}\r\n                                  value={supplyType}\r\n                                >\r\n                                  <option value=\"fixed\">Fixed</option>\r\n                                  <option value=\"capped\">Capped</option>\r\n                                  <option value=\"unlimited\">Unlimited</option>\r\n                                </select>\r\n                                <span className=\"form-text text-muted\">\r\n                                  Fixed / Capped / Unlimited\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                <label className=\"form-label\">\r\n                                  Initial supply\r\n                                  <span className=\"val-required\">*</span>\r\n                                </label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"1000000\"\r\n                                  name=\"initialSupply\"\r\n                                  disabled={f_initialSupply}\r\n                                  value={initialSupply}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-text text-muted\">\r\n                                  The number of coins minted during the creation\r\n                                  of the contract\r\n                                </span>\r\n                              </div>\r\n                              <div\r\n                                className=\"form-group \"\r\n                                style={{ display: !show ? \"block\" : \"none\" }}\r\n                                // style={{display: {d_displayMaximum}}}\r\n                              >\r\n                                <label className=\"form-label\">\r\n                                  Maximum supply\r\n                                  <span className=\"val-required\">*</span>\r\n                                </label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"1000000\"\r\n                                  value={maximumSupply}\r\n                                  name=\"maximumSupply\"\r\n                                  disabled={f_maximumSupply}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-text text-muted\">\r\n                                  The maximum number of coins ever minted\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col mt-3 mt-lg-0\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Options\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  name=\"conforms\"\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  disabled={f_conforms}\r\n                                  onChange={ethMainFormHandler}\r\n                                  defaultChecked={conforms}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Conforms to BEP20 protocol\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Your token will const all the functionalities,\r\n                                and conforms to BEP20 protocol\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  name=\"verified\"\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  onChange={ethMainFormHandler}\r\n                                  disabled={f_verified}\r\n                                  defaultChecked={verified}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Verified on Bscscan\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                The source code of your contract is\r\n                                automatically published and verified\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"noCopyrightLink\"\r\n                                  onChange={ethMainFormHandler}\r\n                                  checked={noCopyrightLink}\r\n                                  disabled={f_noCopyrightLink}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  No copyright link\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                A link pointing to this page will be added in\r\n                                the description of your contract (Free and Basic\r\n                                contracts only)\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  checked={mintable}\r\n                                  disabled={f_mintable}\r\n                                  name=\"mintable\"\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  {\" \"}\r\n                                  Mintable{\" \"}\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow the creation of new tokens in the future\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"burnable\"\r\n                                  checked={burnable}\r\n                                  disabled={f_burnable}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label \">\r\n                                  Burnable\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow your tokens to be burned\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"pausable\"\r\n                                  checked={pausable}\r\n                                  disabled={f_pausable}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Pausable\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow your tokens to be paused\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check form-switch\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"recoverable\"\r\n                                  checked={recoverable}\r\n                                  disabled={f_recoverable}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n                                <span className=\"form-check-label\">\r\n                                  Recoverable\r\n                                </span>\r\n                              </label>\r\n                              <span className=\"form-text text-muted\">\r\n                                Allow to recover any BEP20 tokens sent to your\r\n                                contract\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-label\">\r\n                                Access type\r\n                                <span className=\"val-required\">*</span>\r\n                              </label>\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"accessType\"\r\n                                disabled={f_accessType}\r\n                                value={accessType}\r\n                                onChange={ethMainFormHandler}\r\n                              >\r\n                                <option value=\"owner\">Owner</option>\r\n                                <option value=\"roles\">Roles</option>\r\n                              </select>\r\n                              <span className=\"form-text text-muted\">\r\n                                Who can administer your contract\r\n                              </span>\r\n                              <div className=\"form-info\">\r\n                                <div className=\"form-text text-muted\">\r\n                                  <p>\r\n                                    <span className=\"strong\">Owner:</span> Your\r\n                                    wallet address will be set as the owner of\r\n                                    your token to perform administratives tasks\r\n                                    (ie, mint new tokens).\r\n                                  </p>\r\n                                  <p>\r\n                                    <span className=\"strong\">Roles:</span> All\r\n                                    admin tasks (mint, burn, etc...) will be\r\n                                    available to different users, based on their\r\n                                    roles. By default, your wallet's address\r\n                                    will be given all the roles.\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col mt-3 mt-xl-0\">\r\n                        <div className=\"card\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Network\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"network\"\r\n                                value={network}\r\n                                onChange={ethMainFormHandler}\r\n                              >\r\n                                <option value=\"binanceSmartChain\">Binance Smart Chain</option>\r\n                               \r\n                                <option value=\"binanceSmartChainTestnet\">Binance Smart Chain Testnet</option>\r\n                              </select>\r\n                              <span className=\"form-text text-muted\">\r\n                                Select the network on wich you want to deploy\r\n                                your token\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card mt-3\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Agreement\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                              <label className=\"form-check\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"checkbox\"\r\n                                  name=\"agreement\"\r\n                                  value={agreement}\r\n                                  onChange={ethMainFormHandler}\r\n                                />\r\n\r\n                                <span className=\"form-check-label\">\r\n                                  I have read, understood and agreed to the{\" \"}\r\n                                  {/* <span className=\"text-underline\"> */}\r\n                                  {/*  modal*/}\r\n                                  <a\r\n                                    href=\"/\"\r\n                                    data-bs-toggle=\"modal\"\r\n                                    data-bs-target=\"#exampleModal\"\r\n                                  >\r\n                                    <u> term of use </u>\r\n                                  </a>\r\n                                  <TermsModal />\r\n                                  {/* modal */}\r\n                                  {/* </span> */}\r\n                                </span>\r\n                                <br />\r\n                                <span className=\"text-danger\">\r\n                                  {err.agreementErr}\r\n                                </span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card mt-3\">\r\n                          <div className=\"card-header d-flex align-items-center\">\r\n                            <div className=\"mr-3\" style={{ zoom: 1.5 }}></div>\r\n                            <h4 className=\"m-0\">\r\n                              <i className=\"fa-solid fa-arrow-right me-3\"></i>\r\n                              Transaction\r\n                            </h4>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"transactionWrap\">\r\n                              <div className=\"Ttext\">\r\n                                <p>\r\n                                  Commission fee:{\" \"}\r\n                                  <i\r\n                                    className=\"fa-solid fa-circle-info tip\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    // data-bs-custom-class=\"custom-tooltip\"\r\n                                    title=\"The commison fee will be\r\n                                  transferred automatically to us during the contract creation.In case of error,this amount will not be deducted\r\n                                  from your wallet.Only the gas fees will be deducted \"\r\n                                  ></i>\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"Tbtn\">\r\n                                <span className=\"badge bg-success d-block p-2\">\r\n                                  {commissionFee\r\n                                    ? `${commissionFee} BNB`\r\n                                    : \"FREE\"}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"transactionWrap\">\r\n                              <div className=\"Ttext \">\r\n                                <p>\r\n                                  Gas fee:{\" \"}\r\n                                  <i\r\n                                    className=\"fa-solid fa-circle-info tip\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    title=\"The gas fee depend on gas limit and gas price.\r\n                                  Metamask will automatically display the best fee to use \"\r\n                                  ></i>\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"Tbtn\">\r\n                                <span className=\"badge bg-secondary d-block p-2\">\r\n                                  Variable\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn-lg btn-success1 w-100 botn-clr\"\r\n                            onClick={() => {\r\n                              compileContract(ethFormData);\r\n                            }}\r\n                          >\r\n                            Confirm\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","F:\\CBL\\tokenmaker\\src\\components\\pages\\Front_page\\FrontMain.jsx",[],"F:\\CBL\\tokenmaker\\src\\components\\pages\\landing_page\\Header.jsx",[],"F:\\CBL\\tokenmaker\\src\\components\\pages\\Eth_page\\EthHeader.jsx",[],"F:\\CBL\\tokenmaker\\src\\components\\pages\\landing_page\\Footer.jsx",[],"F:\\CBL\\tokenmaker\\src\\components\\pages\\landing_page\\Main.jsx",[],"F:\\CBL\\tokenmaker\\src\\contexts\\EthContext\\EtherProvider.jsx",["97","98","99"],"F:\\CBL\\tokenmaker\\src\\disabledUtils.js",[],"F:\\CBL\\tokenmaker\\src\\components\\Layots\\layot style\\layotStyle.js",[],"F:\\CBL\\tokenmaker\\src\\components\\Modal\\Multi-WalletModal.js",[],"F:\\CBL\\tokenmaker\\src\\components\\Layots\\TermsModal.jsx",[],"F:\\CBL\\tokenmaker\\src\\components\\pages\\Main_page\\SuccessDeploy.js",[],"F:\\CBL\\tokenmaker\\src\\components\\Modal\\ToastModal.js",[],{"ruleId":"100","severity":1,"message":"101","line":8,"column":10,"nodeType":"102","messageId":"103","endLine":8,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":271,"column":6,"nodeType":"106","endLine":272,"endColumn":4,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":438,"column":6,"nodeType":"106","endLine":438,"endColumn":62,"suggestions":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"100","severity":1,"message":"101","line":20,"column":10,"nodeType":"102","messageId":"103","endLine":20,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":262,"column":6,"nodeType":"106","endLine":262,"endColumn":38,"suggestions":"114"},{"ruleId":"104","severity":1,"message":"108","line":422,"column":6,"nodeType":"106","endLine":422,"endColumn":62,"suggestions":"115"},{"ruleId":"100","severity":1,"message":"101","line":8,"column":10,"nodeType":"102","messageId":"103","endLine":8,"endColumn":25},{"ruleId":"104","severity":1,"message":"116","line":264,"column":6,"nodeType":"106","endLine":264,"endColumn":38,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"108","line":434,"column":6,"nodeType":"106","endLine":434,"endColumn":62,"suggestions":"118"},{"ruleId":"100","severity":1,"message":"119","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":13},{"ruleId":"100","severity":1,"message":"120","line":8,"column":9,"nodeType":"102","messageId":"103","endLine":8,"endColumn":18},{"ruleId":"100","severity":1,"message":"121","line":9,"column":10,"nodeType":"102","messageId":"103","endLine":9,"endColumn":19},"no-unused-vars","'ContractFactory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'burnable', 'commissionFee', 'mintable', and 'pausable'. Either include them or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'supplyType'. Either include it or remove the dependency array.",["123"],"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["126"],["127"],"React Hook useEffect has missing dependencies: 'burnable', 'commissionFee', 'initialSupply', 'mintable', and 'pausable'. Either include them or remove the dependency array.",["128"],["129"],"'axios' is defined but never used.","'FinalMain' is defined but never used.","'useEffect' is defined but never used.",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"134"},{"desc":"132","fix":"135"},{"desc":"136","fix":"137"},{"desc":"132","fix":"138"},"Update the dependencies array to be: [tokenType, supplyType, network, pausable, burnable, commissionFee, mintable]",{"range":"139","text":"140"},"Update the dependencies array to be: [pausable, recoverable, burnable, tokenType, accessType, supplyType]",{"range":"141","text":"142"},{"range":"143","text":"140"},{"range":"144","text":"142"},"Update the dependencies array to be: [tokenType, supplyType, network, pausable, burnable, commissionFee, mintable, initialSupply]",{"range":"145","text":"146"},{"range":"147","text":"142"},[6844,6880],"[tokenType, supplyType, network, pausable, burnable, commissionFee, mintable]",[12414,12470],"[pausable, recoverable, burnable, tokenType, accessType, supplyType]",[6786,6818],[12102,12158],[6808,6840],"[tokenType, supplyType, network, pausable, burnable, commissionFee, mintable, initialSupply]",[12336,12392]]